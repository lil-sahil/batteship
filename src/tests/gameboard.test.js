import { gameboardFactory } from "../factories/gameboard";

// Create Gameboard
test("Create Gameboard", () => {
  let answer = {
    row_0: ["", "", "", "", "", "", "", "", "", ""],
    row_1: ["", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(gameboardFactory().createGameboard()).toEqual(answer);
});

// Place ships
test("Place ship horizontally on gameboard", () => {
  let game = gameboardFactory();
  game.createGameboard();
  let answer = {
    row_0: ["-", "-", "-", "-", "", "", "", "", "", ""],
    row_1: ["", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(0, 0, 4, "horizontal")).toEqual(answer);
});

test("Place ship vertically on gameboard", () => {
  let game = gameboardFactory();
  game.createGameboard();
  let answer = {
    row_0: ["-", "", "", "", "", "", "", "", "", ""],
    row_1: ["-", "", "", "", "", "", "", "", "", ""],
    row_2: ["-", "", "", "", "", "", "", "", "", ""],
    row_3: ["-", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(0, 0, 4, "vertical")).toEqual(answer);
});

test("Place ship vertically out of board", () => {
  let game = gameboardFactory();
  game.createGameboard();
  let answer = {
    row_0: ["", "", "", "", "", "", "", "", "", ""],
    row_1: ["", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(0, 0, 14, "vertical")).toEqual(answer);
});

test("Place ship vertically in in-accesible position", () => {
  let game = gameboardFactory();
  game.createGameboard();
  game.placeShip(0, 0, 2, "vertical");

  let answer = {
    row_0: ["-", "", "", "", "", "", "", "", "", ""],
    row_1: ["-", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(0, 0, 3, "vertical")).toEqual(answer);
});

test("Place ship horizontaly out of board", () => {
  let game = gameboardFactory();
  game.createGameboard();
  let answer = {
    row_0: ["", "", "", "", "", "", "", "", "", ""],
    row_1: ["", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(1, 5, 14, "horizontal")).toEqual(answer);
});

test("Place ship horizontaly in in-accesible position", () => {
  let game = gameboardFactory();
  game.createGameboard();
  game.placeShip(0, 0, 2, "horizontal");

  let answer = {
    row_0: ["-", "-", "", "", "", "", "", "", "", ""],
    row_1: ["", "", "", "", "", "", "", "", "", ""],
    row_2: ["", "", "", "", "", "", "", "", "", ""],
    row_3: ["", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(0, 0, 3, "horizontal")).toEqual(answer);
});

test("Place multiple ships", () => {
  let game = gameboardFactory();
  game.createGameboard();
  game.placeShip(0, 0, 3, "horizontal");

  let answer = {
    row_0: ["-", "-", "-", "", "", "", "", "", "", ""],
    row_1: ["-", "", "", "", "", "", "", "", "", ""],
    row_2: ["-", "", "", "", "", "", "", "", "", ""],
    row_3: ["-", "", "", "", "", "", "", "", "", ""],
    row_4: ["", "", "", "", "", "", "", "", "", ""],
    row_5: ["", "", "", "", "", "", "", "", "", ""],
    row_6: ["", "", "", "", "", "", "", "", "", ""],
    row_7: ["", "", "", "", "", "", "", "", "", ""],
    row_8: ["", "", "", "", "", "", "", "", "", ""],
    row_9: ["", "", "", "", "", "", "", "", "", ""],
  };
  expect(game.placeShip(1, 0, 3, "vertical")).toEqual(answer);
});
